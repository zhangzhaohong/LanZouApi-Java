# 应用名称
spring.application.name=tools-api
spring.application.version=1.0.7.9
# suppress inspection "SpringBootApplicationProperties"
spring.application.build.time=202206101218
spring.jmx.enabled=true
server.address=0.0.0.0
server.real.address=192.168.2.250
# 应用服务 WEB 访问端口
server.port=8080
# 激活的环境
spring.profiles.active=prod
# spring.profiles.active=docker
server.tomcat.uri-encoding=UTF-8
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.force=true
server.servlet.encoding.enabled=true
spring.servlet.multipart.max-file-size=1024MB
spring.servlet.multipart.max-request-size=1024MB
# server.tomcat.connection-timeout=20000
server.tomcat.accept-count=3000
server.tomcat.max-connections=10000
# rocketmq
rocketmq.admin-server=192.168.2.250:55003
rocketmq.name-server=192.168.2.250:55002
rocketmq.producer.group=STOCK-TOOLS-ROCKETMQ-GROUP
# kafka
# suppress inspection "SpringBootApplicationProperties"
spring.kafka.management-server=http://192.168.2.250:55011
spring.kafka.bootstrap-servers=192.168.2.250:55009
spring.kafka.jaas.enabled=false
spring.kafka.properties.security.protocol=PLAINTEXT
# spring.kafka.properties.sasl.mechanism=PLAIN
# spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="admin" password="admin-secret";
# 发生错误后，消息重发的次数
spring.kafka.producer.retries=3
#当有多个消息需要被发送到同一个分区时，生产者会把它们放在同一个批次里。该参数指定了一个批次可以使用的内存大小，按照字节数计算
spring.kafka.producer.batch-size=16384
# 设置生产者内存缓冲区的大小
spring.kafka.producer.buffer-memory=33554432
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.acks=1
# acks=0 ： 生产者在成功写入消息之前不会等待任何来自服务器的响应。
# acks=1 ： 只要集群的首领节点收到消息，生产者就会收到一个来自服务器成功响应。
# acks=all ：只有当所有参与复制的节点全部收到消息时，生产者才会收到一个来自服务器的成功响应。
# xbogus
# suppress inspection "SpringBootApplicationProperties"
xbogus.host=http://192.168.2.250:6000/
# xbogus.host=https://signature-project.vercel.app/